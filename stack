#!/bin/bash

set -e

DSPP_VERSION=1.0.0
DSPP_HASH=$(md5sum "$0" | head -c 5)

abort() { trace "$1"; exit ${2:-1}; }
usage() { abort "Usage: $0 \n\t-f [stack-file.yml] compile|deploy\n\t[-v] show version"; }
trace() { echo -e "$1" 1>&2; }

# parse cmdline
while getopts "vf:" o; do
    case "${o}" in
        f)
          infile=${OPTARG}
            ;;
        v)
          abort "version $DSPP_VERSION"
            ;;
        *)
          usage
            ;;
    esac
done

shift $((OPTIND-1))

# validate args
[ ! -f "$infile" ] && usage

action=$1   # deploy or compile


# start things
trace "Processing stack in '$infile'"

stack_ns=$(yq -e e '.ns' $infile 2>/dev/null) || stack_ns="${infile%.*}"
stack_name=$(yq -e e '.name' $infile 2>/dev/null) || stack_name="${stack_ns}"
trace "Working with stack '${stack_name}@${stack_ns}' from $(yq e '.files | .[] | select(.)' $infile| wc -l) files"
for compose_file in $(yq e '.files | .[] | select(.)' $infile); do
  stack="${stack}$(cat $compose_file)"$'\n---\n'
done;

stack_revision=$(echo -e "$stack" | md5sum | head -c 5)

current_stack=.docker-stack/${stack_ns}.yml

trace "Working in $current_stack"

mkdir -p .docker-stack

echo "$stack"| yq -e e '.' - >/dev/null || (
  dump_file="${current_stack}-debug.yml"
  echo "$stack" > $dump_file
  abort "Find trace in $dump_file"
)

header="${stack_name}:${stack_ns} @${stack_revision} (dspp v${DSPP_VERSION})"

compiled=$(echo "$stack" \
  | yq -j ea 'del(.x-*)' - \
  | yq -P eval-all '. as $item ireduce ({}; . *+ $item ) |
    sortKeys(..) |
    {"version":.version, "configs":.configs, "networks":.networks, "volumes":.volumes, "services":.services} |
    del( .[] | select(. == null) ) |
    . headComment="'"$header"'"
  ' - )


if [[ $action == "deploy" ]] ; then

  [ -f "$current_stack" ] && diff -q "$current_stack" <(echo "$compiled") || abort "Change detected, please compile first"

  docker stack deploy --with-registry-auth --compose-file - $stack_name < "$current_stack"
  docker service ls
fi

if [[ $action == "compile" ]] ; then
  in=$current_stack
  [ ! -f "$in" ] && in=/dev/null

  diff -q "$in" <(echo "$compiled") && abort "No changes detected" 0

  style=0
  while : ; do
    [ $style = 1 ] && ( diff -y <(echo -e "current stack\n---"; cat "$in")  <(echo -e "next stack\n---"; echo "$compiled") | colordiff | most)
    [ $style = 0 ] && ( echo "$compiled" | git diff --no-index "$in" - ) || true
    read -p "Confirm [y/N/q] (q : toggle diff style): " commit

    commit=$(echo -n ${commit:-n} | tr '[:upper:]' '[:lower:]')
    [ $commit != "q" ] && break
    (( style ^= 1 )) || true
  done

  [ $commit != "y" ] && exit 1;

  echo "$compiled" > $current_stack
  trace "Stack wrote in $current_stack"
fi



if [[ $action == "validate" ]] ; then
  echo "$compiled" | yq -P e '' -
  exit 0;
fi




