#!/bin/bash

set -e

abort() { trace "$1"; exit ${2:-1}; }
usage() { abort "Usage: $0 -f [stack-file.yml] compile|deploy"; }
trace() { echo $1 1>&2; }


# parse cmdline
while getopts ":f:" o; do
    case "${o}" in
        f)
          infile=${OPTARG}
            ;;
        *)
            usage
            ;;
    esac
done

shift $((OPTIND-1))

# validate args
[ ! -f $infile ] && usage
action=$1   # deploy or compile


# start things
trace "Processing stack in '$infile'"

stack_ns=$(yq -e e '.ns' $infile 2>/dev/null) || stack_ns="${infile%.*}"
stack_name=$(yq -e e '.name' $infile 2>/dev/null) || stack_name="${stack_ns}"

trace "Working with stack '$stack_name'@'$stack_ns' from $(yq e '.files | .[] | select(.)' $infile| wc -l) files"
for compose_file in $(yq e '.files | .[] | select(.)' $infile); do
  stack="${stack}$(cat $compose_file)\n---\n"
done;

current_stack=.docker-stack-${stack_ns}.yml


echo -e "$stack"| yq -e e '.' - >/dev/null || (
  dump_file="${current_stack}-debug.yml"
  echo -e "$stack" > $dump_file
  abort "Find trace in $dump_file"
)


compiled=$(echo -e "$stack" | yq -j ea '
    sortKeys(..) |
    del(.x-*)' - |
    yq -P eval-all '. as $item ireduce ({}; . * $item ) |
    sortKeys(.services) | sortKeys(.config) | sortKeys(.volumes) |
    {"version":.version, "configs":.configs, "networks":.networks, "volumes":.volumes, "services":.services}
  ' - )


if [[ $action == "deploy" ]] ; then

  [ -f "$current_stack" ] && diff -q "$current_stack" <(echo -e "$compiled") || abort "Change detected, please compile first"

  docker stack deploy --with-registry-auth --compose-file "$current_stack" $stack_name
  docker service ls
fi

if [[ $action == "compile" ]] ; then
  in=$current_stack
  [ ! -f "$in" ] && in=/dev/null
  diff -q "$in" <(echo -e "$compiled") && abort "No changes detected" 0  || ( diff -y <(echo -e "current stack\n---"; cat "$in")  <(echo -e "next stack\n---"; echo -e "$compiled") | colordiff | most)

  read -p "Confirm [y/N]: " commit
  commit=$(echo -n ${commit:-n} | tr '[:upper:]' '[:lower:]')

  [ $commit != "y" ] && exit 1;

  echo -e "$compiled" > $current_stack
  trace "Stack wrote in $current_stack"
fi



if [[ $action == "validate" ]] ; then
  echo -e "$compiled" | yq -P e '' -
  exit 0;
fi




